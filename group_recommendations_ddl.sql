-- MySQL Script generated by MySQL Workbench
-- Sat Jun 12 10:46:43 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema group_recommendations
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema group_recommendations
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `group_recommendations` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema project
-- -----------------------------------------------------
USE `group_recommendations` ;

-- -----------------------------------------------------
-- Table `group_recommendations`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`user` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `spotify_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `spotify_id_UNIQUE` (`spotify_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`playlist` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`playlist` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `link` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`playlist_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`song`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`song` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`song` (
  `song_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `spotify_id` VARCHAR(45) NOT NULL,
  `accousticness` FLOAT NOT NULL,
  `danceability` FLOAT NOT NULL,
  `duration` INT NOT NULL,
  `energy` FLOAT NOT NULL,
  `instrumentalness` FLOAT NOT NULL,
  `key` INT NOT NULL,
  `liveness` FLOAT NOT NULL,
  `loudness` FLOAT NOT NULL,
  `mode` INT NOT NULL,
  `popularity` INT NOT NULL,
  `speechiness` FLOAT NOT NULL,
  `tempo` FLOAT NOT NULL,
  `time_signature` FLOAT NOT NULL,
  `valence` FLOAT NOT NULL,
  PRIMARY KEY (`song_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`user_has_playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`user_has_playlist` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`user_has_playlist` (
  `playlist_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `user_id`),
  INDEX `fk_playlist_has_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_playlist_has_user_playlist1_idx` (`playlist_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_has_user_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `group_recommendations`.`playlist` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `group_recommendations`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`top_track`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`top_track` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`top_track` (
  `user_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  `rank` INT NOT NULL,
  INDEX `fk_user_has_song_song1_idx` (`song_id` ASC) VISIBLE,
  INDEX `fk_user_has_song_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_song_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `group_recommendations`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_song_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `group_recommendations`.`song` (`song_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`playlist_has_song`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`playlist_has_song` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`playlist_has_song` (
  `playlist_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  INDEX `fk_playlist_has_song_song1_idx` (`song_id` ASC) VISIBLE,
  INDEX `fk_playlist_has_song_playlist1_idx` (`playlist_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_has_song_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `group_recommendations`.`playlist` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_has_song_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `group_recommendations`.`song` (`song_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `group_recommendations`.`friends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `group_recommendations`.`friends` ;

CREATE TABLE IF NOT EXISTS `group_recommendations`.`friends` (
  `user1_id` INT NOT NULL,
  `user2_id` INT NOT NULL,
  PRIMARY KEY (`user1_id`, `user2_id`),
  INDEX `fk_user_has_user_user2_idx` (`user2_id` ASC) VISIBLE,
  INDEX `fk_user_has_user_user1_idx` (`user1_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_user_user1`
    FOREIGN KEY (`user1_id`)
    REFERENCES `group_recommendations`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_user2`
    FOREIGN KEY (`user2_id`)
    REFERENCES `group_recommendations`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;